How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Viewing the diff between game_old.js and game_new.js showed me where the two
programs were different. Looking at each difference allowed me to see which
difference was the bug. Without using diff, I would have had to compare both
files line by line to spot the difference that produced the bug. This would have
taken much more time than using diff.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Having easy access to the entire history of a file could make it faster to
discover where bugs where introduced or understand what changes a collaborator
made to the file.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?

Manually choosing when to create a commit is better than having versions
automatically saved because manually saving gives you the ability to create a
version history composed of logical changes that are easy for you or someone
else to follow. If versions were saved automatically, a version could be saved
while you're in the middle of making a change, which would create a version
history containing changes with ambiguous meanings and versions of your program
that do not work.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git allows saving multiple files in one commit because a program might use
multiple files and making a logical change to that program could require
changing more than one file.


How can you use the commands git log and git diff to view the history of files?

The git diff utility requires two commit IDs as arguments. The git log utility
allows you to see all the commits in a repository and their IDs. You can use git
log to see the commits you want to compare. Then you can copy their IDs and
paste them into the git diff command to compare the commits.


How might using version control make you more confident to make changes that
could break something?

If I make a change to a repository and break the program, I can always go back
to an earlier version of the repository where the program worked by using git
checkout. Because of git checkout, I can make any change I want to a repository
without worrying about irreversibily changing the program.
